{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/AdminLoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Form, Transition } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { signIn } from \"../api/auth\";\nimport { AppContext, dispatchLogin } from \"../context/AppContext\";\nimport urls from \"../utils/urls\";\n\nconst AdminLoginForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [animated, setAnimated] = useState(true);\n  const [response, setResponse] = useState('');\n  const [reset, setReset] = useState('false');\n  const {\n    dispatch\n  } = useContext(AppContext);\n\n  const failSubmit = () => {\n    setResponse(\"FAILURE\");\n    setAnimated(!animated);\n  };\n\n  const onSubmit = async e => {\n    setLoading(true);\n    e.preventDefault();\n\n    try {\n      const result = await signIn(username, password);\n\n      if (result.status === 200) {\n        dispatch(dispatchLogin({\n          username,\n          password,\n          token: result === null || result === void 0 ? void 0 : result.data.token\n        }));\n        setResponse(\"SUCCESS\");\n        setAnimated(!animated);\n        history.push(urls.forms);\n      } else {\n        failSubmit();\n      }\n    } catch (err) {\n      console.error('Failed to authenticate', err);\n      failSubmit();\n    } finally {\n      setLoading(false);\n      clearTimeout(reset);\n      setReset(setTimeout(() => setResponse(null), 1000));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Acesso administrativo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        required: true,\n        name: \"username\",\n        label: \"Usu\\xE1rio\",\n        onChange: (_, {\n          value\n        }) => setUsername(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        label: \"Senha\",\n        onChange: (_, {\n          value\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Transition, {\n        animation: response == \"FAILURE\" ? \"shake\" : \"\",\n        duration: 300,\n        visible: animated,\n        children: /*#__PURE__*/_jsxDEV(Form.Button, {\n          primary: true,\n          loading: loading,\n          disabled: loading,\n          negative: response == \"FAILURE\",\n          positive: response == \"SUCCESS\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminLoginForm, \"pq6mzHOzMPvhlhAZ4pW28PBzFzY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminLoginForm;\nexport default AdminLoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLoginForm\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/AdminLoginForm.jsx"],"names":["React","useState","useContext","Form","Transition","useHistory","signIn","AppContext","dispatchLogin","urls","AdminLoginForm","history","username","setUsername","password","setPassword","loading","setLoading","animated","setAnimated","response","setResponse","reset","setReset","dispatch","failSubmit","onSubmit","e","preventDefault","result","status","token","data","push","forms","err","console","error","clearTimeout","setTimeout","_","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Form, Transition } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { signIn } from \"../api/auth\";\nimport {\n    AppContext,\n    dispatchLogin,\n} from \"../context/AppContext\";\nimport urls from \"../utils/urls\";\n\nconst AdminLoginForm = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [animated, setAnimated] = useState(true);\n    const [response, setResponse] = useState('');\n    const [reset, setReset] = useState('false');\n    const { dispatch } = useContext(AppContext);\n\n    const failSubmit = () => {\n        setResponse(\"FAILURE\");\n        setAnimated(!animated);\n    };\n\n    const onSubmit = async e => {\n        setLoading(true);\n\n        e.preventDefault();\n\n        try {\n            const result = await signIn(username, password);\n            if (result.status === 200) {\n                dispatch(dispatchLogin({\n                    username,\n                    password,\n                    token: result?.data.token\n                }))\n                setResponse(\"SUCCESS\");\n                setAnimated(!animated);\n\n                history.push(urls.forms);\n            } else {\n                failSubmit();\n            }\n        } catch (err) {\n            console.error('Failed to authenticate', err);\n            failSubmit()\n        } finally {\n            setLoading(false);\n            clearTimeout(reset);\n            setReset(setTimeout(() => setResponse(null), 1000));\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <h3>Acesso administrativo</h3>\n            <Form onSubmit={onSubmit}>\n                <Form.Input required name=\"username\" label=\"UsuÃ¡rio\" onChange={(_, { value }) => setUsername(value)} />\n                <Form.Input type=\"password\" required name=\"password\" label=\"Senha\" onChange={(_, { value }) => setPassword(value)} />\n\n                <Transition\n                    animation={response == \"FAILURE\" ? \"shake\" : \"\"}\n                    duration={300}\n                    visible={animated}\n                >\n                    <Form.Button\n                        primary\n                        loading={loading}\n                        disabled={loading}\n                        negative={response == \"FAILURE\"}\n                        positive={response == \"SUCCESS\"}\n                    >Entrar</Form.Button>\n                </Transition>\n            </Form>\n        </React.Fragment>\n    );\n}\n\nexport default AdminLoginForm;\n"]},"metadata":{},"sourceType":"module"}