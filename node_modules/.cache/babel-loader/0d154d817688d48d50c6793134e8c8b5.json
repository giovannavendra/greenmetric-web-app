{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/MetricsEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { getMetricbyId } from '../utils/data';\nconst typesOptions = [{\n  key: '1',\n  text: 'Inteiro',\n  value: 'INTEGER'\n}, {\n  key: '2',\n  text: 'Real',\n  value: 'FLOAT'\n}, {\n  key: '3',\n  text: 'Opções',\n  value: 'SELECT'\n}];\nconst hasDataOptions = [{\n  key: '1',\n  text: 'Sim',\n  value: true\n}, {\n  key: '2',\n  text: 'Não',\n  value: false\n}];\nconst evidenceRequirementOptions = [{\n  key: '1',\n  text: 'Nenhuma evidência',\n  value: 'NONE'\n}, {\n  key: '2',\n  text: 'Evidência opcional',\n  value: 'OPTIONAL'\n}, {\n  key: '3',\n  text: 'Evidência obrigatória',\n  value: 'REQUIRED'\n}];\nconst defaultState = {\n  valueType: '',\n  hasData: '',\n  evidenceRequirement: '',\n  unit: '',\n  id: '',\n  title: '',\n  description: '',\n  code: '',\n  expression: '',\n  dependencies: ''\n};\n\nconst MetricsEditor = ({\n  id\n}) => {\n  _s();\n\n  const [info, setInfo] = useState({ ...defaultState\n  });\n  useEffect(() => {\n    const fetchData = async id => {\n      if (!id) return;\n\n      try {\n        const {\n          data\n        } = await getMetricbyId(id);\n        setInfo(data);\n      } catch {\n        setInfo({ ...defaultState,\n          id: `${id}/`\n        });\n      }\n    };\n\n    fetchData(id);\n  }, [id]);\n\n  const handleChange = (name, value) => {\n    setInfo({ ...info,\n      [name]: value\n    });\n  };\n\n  const onSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n        options: typesOptions,\n        placeholder: \"Tipo\",\n        label: \"Tipo\",\n        name: \"valueType\",\n        value: info.valueType,\n        onChange: (e, {\n          name,\n          value\n        }) => handleChange(name, value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        options: hasDataOptions,\n        placeholder: \"O campo \\xE9 edit\\xE1vel?\",\n        label: \"Dados\",\n        name: \"hasData\",\n        value: info.hasData,\n        onChange: (e, {\n          name,\n          value\n        }) => handleChange(name, value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n        options: evidenceRequirementOptions,\n        placeholder: \"O campo possui evid\\xEAncia?\",\n        label: \"Evid\\xEAncia\",\n        name: \"evidenceRequirement\",\n        value: info.evidenceRequirement,\n        onChange: (e, {\n          name,\n          value\n        }) => handleChange(name, value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Unidade\",\n        placeholder: \"Ex: m\\xB2, %\",\n        name: \"unit\",\n        value: info.unit,\n        onChange: ({\n          target\n        }) => handleChange(target.name, target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"ID\",\n        placeholder: \"Valor \\xFAnico de identifica\\xE7\\xE3o da m\\xE9trica no banco de dados\",\n        name: \"id\",\n        value: info.id,\n        onChange: ({\n          target\n        }) => handleChange(target.name, target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"T\\xEDtulo\",\n        placeholder: \"Nome da m\\xE9trica\",\n        name: \"title\",\n        value: info.title,\n        onChange: ({\n          target\n        }) => handleChange(target.name, target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n      label: \"Descri\\xE7\\xE3o\",\n      placeholder: \"Descreva em palavras como calcular esta m\\xE9trica\",\n      name: \"description\",\n      value: info.description,\n      onChange: ({\n        target\n      }) => handleChange(target.name, target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      label: \"Code\",\n      placeholder: \"Valor usado para cria\\xE7\\xE3o do dashboard\",\n      name: \"code\",\n      value: info.code,\n      onChange: ({\n        target\n      }) => handleChange(target.name, target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      label: \"Express\\xE3o\",\n      placeholder: \"F\\xF3rmula matem\\xE1tica para calcular a m\\xE9trica\",\n      name: \"expression\",\n      value: info.expression,\n      onChange: ({\n        target\n      }) => handleChange(target.name, target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      label: \"Depend\\xEAncias\",\n      placeholder: \"O c\\xE1lculo desta m\\xE9trica depende de quais outras m\\xE9tricas (forne\\xE7a os Ids)\",\n      name: \"dependencies\",\n      value: info.dependecies,\n      onChange: (e, {\n        name,\n        value\n      }) => handleChange(name, value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(Form.Button, {\n        className: \"centered\",\n        color: \"black\",\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MetricsEditor, \"ggBGAvIdco4oFBTKY0XFyoCpmVY=\");\n\n_c = MetricsEditor;\nexport default MetricsEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetricsEditor\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/MetricsEditor.jsx"],"names":["React","useEffect","useState","Form","getMetricbyId","typesOptions","key","text","value","hasDataOptions","evidenceRequirementOptions","defaultState","valueType","hasData","evidenceRequirement","unit","id","title","description","code","expression","dependencies","MetricsEditor","info","setInfo","fetchData","data","handleChange","name","onSubmit","e","target","dependecies"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Form } from 'semantic-ui-react'\nimport { getMetricbyId } from '../utils/data'\n\nconst typesOptions = [\n    { key: '1', text: 'Inteiro', value: 'INTEGER' },\n    { key: '2', text: 'Real', value: 'FLOAT' },\n    { key: '3', text: 'Opções', value: 'SELECT' },\n]\n\nconst hasDataOptions = [\n    { key: '1', text: 'Sim', value: true },\n    { key: '2', text: 'Não', value: false },\n]\n\nconst evidenceRequirementOptions = [\n    { key: '1', text: 'Nenhuma evidência', value: 'NONE' },\n    { key: '2', text: 'Evidência opcional', value: 'OPTIONAL' },\n    { key: '3', text: 'Evidência obrigatória', value: 'REQUIRED' },\n]\n\nconst defaultState = {\n    valueType: '',\n    hasData: '',\n    evidenceRequirement: '',\n    unit: '',\n    id: '',\n    title: '',\n    description: '',\n    code: '',\n    expression: '',\n    dependencies: '',\n}\n\n\nconst MetricsEditor = ({ id }) => {\n\n    const [info, setInfo] = useState({ ...defaultState })\n\n    useEffect(() => {\n        const fetchData = async (id) => {\n\n            if (!id) return\n\n            try {\n                const { data } = await getMetricbyId(id)\n                setInfo(data)\n            } catch {\n                setInfo({ ...defaultState, id: `${id}/` })\n            }\n        }\n\n        fetchData(id)\n    }, [id])\n\n    const handleChange = (name, value) => {\n        setInfo({ ...info, [name]: value })\n    }\n\n    const onSubmit = () => {\n\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            <Form.Group widths='equal'>\n                <Form.Select\n                    options={typesOptions}\n                    placeholder='Tipo'\n                    label='Tipo'\n                    name='valueType'\n                    value={info.valueType}\n                    onChange={(e, { name, value }) => handleChange(name, value)}\n                />\n                <Form.Select\n                    options={hasDataOptions}\n                    placeholder='O campo é editável?'\n                    label='Dados'\n                    name='hasData'\n                    value={info.hasData}\n                    onChange={(e, { name, value }) => handleChange(name, value)}\n                />\n            </Form.Group>\n            <Form.Group widths='equal'>\n                <Form.Select\n                    options={evidenceRequirementOptions}\n                    placeholder='O campo possui evidência?'\n                    label='Evidência'\n                    name='evidenceRequirement'\n                    value={info.evidenceRequirement}\n                    onChange={(e, { name, value }) => handleChange(name, value)}\n                />\n                <Form.Input\n                    label=\"Unidade\"\n                    placeholder=\"Ex: m², %\"\n                    name='unit'\n                    value={info.unit}\n                    onChange={({ target }) => handleChange(target.name, target.value)}\n                />\n            </Form.Group>\n            <Form.Group widths='equal'>\n                <Form.Input\n                    label=\"ID\"\n                    placeholder=\"Valor único de identificação da métrica no banco de dados\"\n                    name='id'\n                    value={info.id}\n                    onChange={({ target }) => handleChange(target.name, target.value)}\n                />\n                <Form.Input\n                    label=\"Título\"\n                    placeholder=\"Nome da métrica\"\n                    name='title'\n                    value={info.title}\n                    onChange={({ target }) => handleChange(target.name, target.value)}\n                />\n            </Form.Group>\n            <Form.TextArea\n                label=\"Descrição\"\n                placeholder=\"Descreva em palavras como calcular esta métrica\"\n                name='description'\n                value={info.description}\n                onChange={({ target }) => handleChange(target.name, target.value)}\n            />\n            <Form.Input\n                label=\"Code\"\n                placeholder=\"Valor usado para criação do dashboard\"\n                name='code'\n                value={info.code}\n                onChange={({ target }) => handleChange(target.name, target.value)}\n            />\n            <Form.Input\n                label=\"Expressão\"\n                placeholder=\"Fórmula matemática para calcular a métrica\"\n                name='expression'\n                value={info.expression}\n                onChange={({ target }) => handleChange(target.name, target.value)}\n            />\n            <Form.Select\n                label=\"Dependências\"\n                placeholder=\"O cálculo desta métrica depende de quais outras métricas (forneça os Ids)\"\n                name='dependencies'\n                value={info.dependecies}\n                onChange={(e, { name, value }) => handleChange(name, value)}\n            />\n            <div className='app-footer'>\n                <Form.Button\n                    className=\"centered\"\n                    color='black'\n                    type='submit'>Enviar</Form.Button>\n            </div>\n        </Form>\n    )\n}\n\nexport default MetricsEditor"]},"metadata":{},"sourceType":"module"}