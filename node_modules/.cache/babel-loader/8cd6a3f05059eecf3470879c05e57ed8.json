{"ast":null,"code":"import Axios from \"axios\";\nimport { createContext } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport { servAddr } from \"../utils/constants\";\nexport const defaultAppContext = {\n  loading: false,\n  metrics: [],\n  user: {\n    authenticated: false,\n    username: null,\n    password: null\n  }\n};\nexport const AppContext = /*#__PURE__*/createContext(defaultAppContext);\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state,\n        loading: action.value\n      };\n\n    case \"GET_METRICS\":\n      return { ...state,\n        metrics: action.value.map(el => {\n          el.oldData = el.data instanceof Object ? { ...el.data\n          } : el.data;\n          return el;\n        })\n      };\n\n    case \"SET_METRIC\":\n      return { ...state,\n        metrics: state.metrics.map(el => {\n          if (el.id === action.id) {\n            if (el === null || el === void 0 ? void 0 : el.data.hasOwnProperty(\"options\")) el.data.currentOption = action.value;else el.data = action.value;\n          }\n\n          return el;\n        })\n      };\n\n    case 'ADD_EVIDENCE':\n      return { ...state,\n        metrics: state.metrics.map(metric => {\n          if (metric.id === action.id) {\n            if (!metric.evidences.find(el => {\n              var _el$data;\n\n              return (el === null || el === void 0 ? void 0 : (_el$data = el.data) === null || _el$data === void 0 ? void 0 : _el$data.name) === action.file.name;\n            })) metric.evidences = [...metric.evidences, {\n              id: action.file.name,\n              data: action.file,\n              action: 'UPLOAD'\n            }];\n          }\n\n          return metric;\n        })\n      };\n\n    case 'REMOVE_EVIDENCE':\n      return { ...state,\n        metrics: state.metrics.map(metric => {\n          if (metric.id === action.id) {\n            metric.evidences = metric.evidences.map(evidence => {\n              if (evidence.id === action.evidenceId) {\n                return { ...evidence,\n                  data: null,\n                  action: 'DELETE'\n                };\n              }\n\n              return evidence;\n            });\n          }\n\n          return metric;\n        })\n      };\n\n    case \"LOGOUT\":\n      return { ...state,\n        user: {\n          authenticated: false,\n          username: null,\n          password: null\n        }\n      };\n\n    case \"LOGIN\":\n      return { ...state,\n        user: {\n          authenticated: true,\n          username: action.username,\n          password: action.password\n        }\n      };\n\n    case \"FORM_LOGIN\":\n      return { ...state,\n        user: {\n          authenticated: true,\n          username: null,\n          password: null\n        }\n      };\n\n    default:\n      return state;\n  }\n};\nexport const dispatchLoading = loading => ({\n  type: \"LOADING\",\n  value: loading\n});\nexport const dispatchLogin = ({\n  username,\n  password\n}) => ({\n  username,\n  password,\n  type: \"LOGIN\"\n});\nexport const dispatchLogout = user => ({\n  type: \"LOGOUT\"\n});\nexport const dispatchFormLogin = () => ({\n  type: \"FORM_LOGIN\"\n});\nexport const dispatchStartGetMetrics = dispatch => {\n  Axios.get(`${servAddr}/metrics`).then(({\n    data\n  }) => {\n    dispatch(dispatchGetMetrics(data));\n  });\n};\n\nconst dispatchGetMetrics = metrics => ({\n  type: \"GET_METRICS\",\n  value: metrics\n});\n\nexport const dispatchSetMetric = (id, value) => ({\n  type: \"SET_METRIC\",\n  id,\n  value\n});\nexport const dispatchAddEvidence = (metricId, file) => ({\n  type: 'ADD_EVIDENCE',\n  id: metricId,\n  file\n});\nexport const dispatchRemoveEvidence = (metricId, evidenceId) => ({\n  type: 'REMOVE_EVIDENCE',\n  id: metricId,\n  evidenceId\n});","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/context/AppContext.js"],"names":["Axios","createContext","act","servAddr","defaultAppContext","loading","metrics","user","authenticated","username","password","AppContext","appReducer","state","action","type","value","map","el","oldData","data","Object","id","hasOwnProperty","currentOption","metric","evidences","find","name","file","evidence","evidenceId","dispatchLoading","dispatchLogin","dispatchLogout","dispatchFormLogin","dispatchStartGetMetrics","dispatch","get","then","dispatchGetMetrics","dispatchSetMetric","dispatchAddEvidence","metricId","dispatchRemoveEvidence"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { createContext } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport { servAddr } from \"../utils/constants\";\n\nexport const defaultAppContext = {\n  loading: false,\n  metrics: [],\n  user: {\n    authenticated: false,\n    username: null,\n    password: null\n  }\n};\n\nexport const AppContext = createContext(defaultAppContext);\n\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return { ...state, loading: action.value };\n    case \"GET_METRICS\":\n      return {\n        ...state,\n        metrics: action.value.map((el) => {\n          el.oldData = el.data instanceof Object ? { ...el.data } : el.data;\n          return el;\n        }),\n      };\n    case \"SET_METRIC\":\n      return {\n        ...state,\n        metrics: state.metrics.map((el) => {\n          if (el.id === action.id) {\n            if (el?.data.hasOwnProperty(\"options\"))\n              el.data.currentOption = action.value;\n            else el.data = action.value;\n          }\n          return el;\n        }),\n      };\n    case 'ADD_EVIDENCE':\n      return {\n        ...state,\n        metrics: state.metrics.map((metric) => {\n          if (metric.id === action.id) {\n            if (!metric.evidences.find(el => el?.data?.name === action.file.name))\n              metric.evidences = [...metric.evidences, { id: action.file.name, data: action.file, action: 'UPLOAD' }]\n          }\n          return metric;\n        }),\n      }\n    case 'REMOVE_EVIDENCE':\n      return {\n        ...state,\n        metrics: state.metrics.map((metric) => {\n          if (metric.id === action.id) {\n            metric.evidences = metric.evidences.map((evidence) => {\n              if (evidence.id === action.evidenceId) {\n                return { ...evidence, data: null, action: 'DELETE' }\n              }\n              return evidence\n            })\n          }\n          return metric;\n        }),\n      }\n    case \"LOGOUT\":\n      return {\n        ...state,\n        user: {\n          authenticated: false,\n          username: null,\n          password: null\n        },\n      };\n    case \"LOGIN\":\n      return {\n        ...state,\n        user: {\n          authenticated: true,\n          username: action.username,\n          password: action.password\n        },\n      };\n    case \"FORM_LOGIN\":\n      return {\n        ...state,\n        user: {\n          authenticated: true,\n          username: null,\n          password: null\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const dispatchLoading = (loading) => ({\n  type: \"LOADING\",\n  value: loading,\n});\n\nexport const dispatchLogin = ({ username, password }) => ({\n  username,\n  password,\n  type: \"LOGIN\",\n});\n\nexport const dispatchLogout = (user) => ({\n  type: \"LOGOUT\",\n});\n\nexport const dispatchFormLogin = () => ({\n  type: \"FORM_LOGIN\",\n});\n\nexport const dispatchStartGetMetrics = (dispatch) => {\n  Axios.get(`${servAddr}/metrics`).then(({ data }) => {\n    dispatch(dispatchGetMetrics(data));\n  });\n};\n\nconst dispatchGetMetrics = (metrics) => ({\n  type: \"GET_METRICS\",\n  value: metrics,\n});\n\nexport const dispatchSetMetric = (id, value) => ({\n  type: \"SET_METRIC\",\n  id,\n  value,\n});\n\n\nexport const dispatchAddEvidence = (metricId, file) => ({\n  type: 'ADD_EVIDENCE',\n  id: metricId,\n  file\n})\n\nexport const dispatchRemoveEvidence = (metricId, evidenceId) => ({\n  type: 'REMOVE_EVIDENCE',\n  id: metricId,\n  evidenceId\n})"]},"metadata":{},"sourceType":"module"}