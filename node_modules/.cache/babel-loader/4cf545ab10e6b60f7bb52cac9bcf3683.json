{"ast":null,"code":"import axios from \"axios\";\nimport { servAddr } from \"../utils/constants\";\nexport const putMetricData = (id, value) => {\n  if (window.localStorage.getItem('token')) {\n    return axios.put(`${servAddr}/metrics/${id.replace(/\\//g, '-')}`, {\n      data: isNaN(value) ? value : parseInt(value, 10),\n      formsToken: window.localStorage.getItem('formsToken')\n    });\n  } else {\n    return axios.put(`${servAddr}/submit/metrics/${id.replace(/\\//g, '-')}`, {\n      data: isNaN(value) ? value : parseInt(value, 10),\n      formsToken: window.localStorage.getItem('formsToken')\n    });\n  }\n};\nexport const postForms = (title, metrics) => {\n  return axios.post(`${servAddr}/forms`, {\n    title,\n    metrics\n  });\n};\nexport const putForms = (id, title, metrics) => {\n  return axios.put(`${servAddr}/forms`, {\n    id,\n    title,\n    metrics\n  });\n};\nexport const getForms = () => {\n  return axios.get(`${servAddr}/forms`);\n};\nexport const postEvidence = (metricId, file) => {\n  let formData = new FormData();\n  formData.append(\"data\", file, file.name);\n  formData.append(\"formsToken\", window.localStorage.getItem('formsToken'));\n\n  if (window.localStorage.getItem('token')) {\n    return axios.post(`${servAddr}/metrics/${metricId.replace(/\\//g, '-')}/evidence`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  } else {\n    return axios.post(`${servAddr}/submit/metrics/${metricId.replace(/\\//g, '-')}/evidence`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\nexport const getMetricbyId = metricId => {\n  return axios.get(`${servAddr}/metrics/${metricId.replace(/\\//g, '-')}`);\n};\nexport const deleteEvidence = (metricId, evidenceId) => {\n  return axios.delete(`${servAddr}/metrics/${metricId.replace(/\\//g, '-')}/evidence/${evidenceId}`);\n};\nexport const getMetrics = () => {\n  return axios.get(`${servAddr}/metrics`);\n};\nexport const deleteForms = formsId => {\n  return axios.delete(`${servAddr}/forms/${formsId}`);\n};\nexport const getFormsByToken = token => {\n  return axios.get(`${servAddr}/api/auth/forms/${token}`);\n};\nexport const refreshTokenForm = formsId => {\n  return axios.get(`${servAddr}/forms/${formsId}/refresh`);\n};\nexport const postMetric = metric => {\n  return axios.post(`${servAddr}/metrics`, { ...metric,\n    evidences: [],\n    dependencies: []\n  });\n};\nexport const putMetric = metric => {\n  return axios.put(`${servAddr}/metrics`, { ...metric,\n    evidences: [],\n    dependencies: []\n  });\n};\nexport const deleteDirectory = dirName => {\n  return axios.delete(`${servAddr}/metrics/directory/${dirName.replace(/\\//g, '-')}`);\n};\nexport const copyDiretory = (dstDirname, srcDirname) => {\n  return axios.post(`${servAddr}/metrics/directory`, {}, {\n    params: {\n      dstDirname,\n      srcDirname\n    }\n  });\n};","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/utils/data.js"],"names":["axios","servAddr","putMetricData","id","value","window","localStorage","getItem","put","replace","data","isNaN","parseInt","formsToken","postForms","title","metrics","post","putForms","getForms","get","postEvidence","metricId","file","formData","FormData","append","name","headers","getMetricbyId","deleteEvidence","evidenceId","delete","getMetrics","deleteForms","formsId","getFormsByToken","token","refreshTokenForm","postMetric","metric","evidences","dependencies","putMetric","deleteDirectory","dirName","copyDiretory","dstDirname","srcDirname","params"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { servAddr } from \"../utils/constants\";\n\nexport const putMetricData = (id, value) => {\n    if (window.localStorage.getItem('token')) {\n        return axios.put(`${servAddr}/metrics/${id.replace(/\\//g, '-')}`, {\n            data: isNaN(value) ? value : parseInt(value, 10),\n            formsToken: window.localStorage.getItem('formsToken')\n        });\n    } else {\n        return axios.put(`${servAddr}/submit/metrics/${id.replace(/\\//g, '-')}`, {\n            data: isNaN(value) ? value : parseInt(value, 10),\n            formsToken: window.localStorage.getItem('formsToken')\n        });\n    }\n};\n\nexport const postForms = (title, metrics) => {\n    return axios.post(`${servAddr}/forms`, {\n        title,\n        metrics,\n    });\n};\n\nexport const putForms = (id, title, metrics) => {\n    return axios.put(`${servAddr}/forms`, {\n        id,\n        title,\n        metrics,\n    });\n};\n\nexport const getForms = () => {\n    return axios.get(`${servAddr}/forms`);\n};\n\nexport const postEvidence = (metricId, file) => {\n\n    let formData = new FormData();\n\n    formData.append(\"data\", file, file.name);\n    formData.append(\"formsToken\", window.localStorage.getItem('formsToken'));\n\n    if (window.localStorage.getItem('token')) {\n        return axios.post(`${servAddr}/metrics/${metricId.replace(/\\//g, '-')}/evidence`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    } else {\n        return axios.post(`${servAddr}/submit/metrics/${metricId.replace(/\\//g, '-')}/evidence`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    }\n}\n\nexport const getMetricbyId = (metricId) => {\n    return axios.get(`${servAddr}/metrics/${metricId.replace(/\\//g, '-')}`)\n}\n\nexport const deleteEvidence = (metricId, evidenceId) => {\n    return axios.delete(`${servAddr}/metrics/${metricId.replace(/\\//g, '-')}/evidence/${evidenceId}`)\n}\n\nexport const getMetrics = () => {\n    return axios.get(`${servAddr}/metrics`)\n}\n\nexport const deleteForms = (formsId) => {\n    return axios.delete(`${servAddr}/forms/${formsId}`)\n}\n\nexport const getFormsByToken = (token) => {\n    return axios.get(`${servAddr}/api/auth/forms/${token}`)\n}\n\nexport const refreshTokenForm = (formsId) => {\n    return axios.get(`${servAddr}/forms/${formsId}/refresh`)\n}\n\nexport const postMetric = (metric) => {\n    return axios.post(`${servAddr}/metrics`, { ...metric, evidences: [], dependencies: [] })\n}\n\nexport const putMetric = (metric) => {\n    return axios.put(`${servAddr}/metrics`, { ...metric, evidences: [], dependencies: [] })\n}\n\nexport const deleteDirectory = (dirName) => {\n    return axios.delete(`${servAddr}/metrics/directory/${dirName.replace(/\\//g, '-')}`)\n}\n\nexport const copyDiretory = (dstDirname, srcDirname) => {\n    return axios.post(`${servAddr}/metrics/directory`, {}, {\n        params: {\n            dstDirname, srcDirname\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}