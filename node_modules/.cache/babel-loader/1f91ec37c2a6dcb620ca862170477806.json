{"ast":null,"code":"import axios from \"axios\";\nimport { servAddr } from \"../utils/constants\";\nexport const calculate = id => {\n  return axios.get(`${servAddr}/dashboard/${id}/calculate`);\n};\nexport const createDashboard = (id, name) => {\n  return axios.post(`${servAddr}/dashboard`, {\n    id,\n    name\n  });\n};\nexport const createCategory = ({\n  id,\n  dashboard,\n  name,\n  weight,\n  color,\n  order,\n  metrics\n}) => {\n  return axios.post(`${servAddr}/category`, {\n    id,\n    dashboard,\n    name,\n    weight,\n    color,\n    order,\n    metrics\n  });\n};\nexport const updateCategory = (id, {\n  name,\n  weight,\n  color,\n  order,\n  metrics\n}) => {\n  return axios.put(`${servAddr}/category/${id}`, {\n    name,\n    weight,\n    color,\n    order,\n    metrics\n  });\n};\nexport const deleteCategory = id => {\n  return axios.delete(`${servAddr}/category/${id}`);\n};\nexport const deleteDashboard = id => {\n  return axios.delete(`${servAddr}/dashboard/${id}`);\n};\nexport const editDashboard = (id, name) => {\n  return axios.put(`${servAddr}/dashboard/${id}`, {\n    name\n  });\n};\nexport const listDashboards = () => {\n  return axios.get(`${servAddr}/dashboard`);\n};\nexport const getDashboard = id => {\n  return axios.get(`${servAddr}/dashboard/${id}`);\n};\nexport const listScore = () => {\n  return axios.get(`${servAddr}/score`);\n};\nexport const getScore = metricId => {\n  return axios.get(`${servAddr}/score/${metricId.replace(/\\//g, '-')}`);\n};\nexport const createScore = ({\n  metricId,\n  code,\n  name,\n  points,\n  ranges\n}) => {\n  return axios.post(`${servAddr}/score`, {\n    metricId,\n    code,\n    name,\n    points,\n    ranges\n  });\n};\nexport const updateScore = (metricId, {\n  code,\n  name,\n  points,\n  ranges\n}) => {\n  return axios.put(`${servAddr}/score/${metricId.replace(/\\//g, '-')}`, {\n    code,\n    name,\n    points,\n    ranges\n  });\n};","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/api/score.js"],"names":["axios","servAddr","calculate","id","get","createDashboard","name","post","createCategory","dashboard","weight","color","order","metrics","updateCategory","put","deleteCategory","delete","deleteDashboard","editDashboard","listDashboards","getDashboard","listScore","getScore","metricId","replace","createScore","code","points","ranges","updateScore"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { servAddr } from \"../utils/constants\";\n\nexport const calculate = (id) => {\n  return axios.get(`${servAddr}/dashboard/${id}/calculate`);\n};\n\nexport const createDashboard = (id, name) => {\n  return axios.post(`${servAddr}/dashboard`, {\n    id,\n    name,\n  });\n};\n\nexport const createCategory = ({ id, dashboard, name, weight, color, order, metrics }) => {\n  return axios.post(`${servAddr}/category`, {\n    id,\n    dashboard,\n    name,\n    weight,\n    color,\n    order,\n    metrics,\n  });\n};\n\nexport const updateCategory = (id, { name, weight, color, order, metrics }) => {\n  return axios.put(`${servAddr}/category/${id}`, {\n    name,\n    weight,\n    color,\n    order,\n    metrics,\n  });\n};\n\nexport const deleteCategory = (id) => {\n  return axios.delete(`${servAddr}/category/${id}`);\n};\n\nexport const deleteDashboard = (id) => {\n  return axios.delete(`${servAddr}/dashboard/${id}`);\n};\n\nexport const editDashboard = (id, name) => {\n  return axios.put(`${servAddr}/dashboard/${id}`, {\n    name,\n  });\n};\n\nexport const listDashboards = () => {\n  return axios.get(`${servAddr}/dashboard`);\n};\n\nexport const getDashboard = (id) => {\n  return axios.get(`${servAddr}/dashboard/${id}`);\n};\n\nexport const listScore = () => {\n  return axios.get(`${servAddr}/score`);\n};\n\nexport const getScore = (metricId) => {\n  return axios.get(`${servAddr}/score/${metricId.replace(/\\//g, '-')}`);\n};\n\nexport const createScore = ({ metricId, code, name, points, ranges }) => {\n  return axios.post(`${servAddr}/score`, {\n    metricId,\n    code,\n    name,\n    points,\n    ranges\n  });\n}\n\nexport const updateScore = (metricId, { code, name, points, ranges }) => {\n  return axios.put(`${servAddr}/score/${metricId.replace(/\\//g, '-')}`, {\n    code,\n    name,\n    points,\n    ranges\n  });\n}\n"]},"metadata":{},"sourceType":"module"}