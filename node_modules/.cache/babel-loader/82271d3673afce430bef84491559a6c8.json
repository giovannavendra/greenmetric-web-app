{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/Question.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { parseSelect } from \"../utils/utils\";\nimport { Form, Button, Icon } from \"semantic-ui-react\";\nimport { servAddr } from '../utils/constants';\nimport { deleteEvidence } from '../utils/data';\n\nconst Question = ({\n  q,\n  disabled,\n  onChangeSelect,\n  onChangeInput,\n  onAddEvidence,\n  onRemoveEvidence\n}) => {\n  _s();\n\n  var _q$data;\n\n  const inputImg = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `${q.id}. ${q.title} ${q.code ? `(${q.code})` : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: q.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), (q === null || q === void 0 ? void 0 : (_q$data = q.data) === null || _q$data === void 0 ? void 0 : _q$data.hasOwnProperty(\"options\")) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form.Select, {\n        disabled: disabled,\n        name: q.id,\n        options: parseSelect(q.data.options),\n        value: q.data.currentOption,\n        onChange: onChangeSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [q.hasData && /*#__PURE__*/_jsxDEV(Form.Input, {\n          disabled: disabled,\n          label: \"Resposta\",\n          name: q.id,\n          value: q.data,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Valor Computado\",\n          disabled: true,\n          name: q.id,\n          value: `${q.value} ${q.unit ? `${q.unit}` : \"\"}`,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false), q.evidenceRequirement !== \"NONE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      name: \"evidenceRequirement\",\n      style: {\n        justifyContent: q.evidenceRequirement === \"REQUIRED\" ? \"space-between\" : \"flex-end\"\n      },\n      children: [q.evidenceRequirement === \"REQUIRED\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Evid\\xEAncia Obrigat\\xF3ria*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        icon: \"archive\",\n        type: \"button\",\n        content: \"Anexar Evid\\xEAncia\",\n        className: \"secondary-button\",\n        onClick: () => inputImg.current.click()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: ({\n          target\n        }) => onAddEvidence(q.id, Array.from(target.files)),\n        ref: inputImg,\n        type: \"file\",\n        multiple: true,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), !disabled && q.evidences.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"evidences\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'evidence',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Baixar ZIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${servAddr}/metrics/${q.id.replace('/', '-')}/zip`,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), q.evidences.map(evidence => {\n        var _evidence$data;\n\n        return evidence.action !== 'DELETE' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'evidence',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: evidence.filename || (evidence === null || evidence === void 0 ? void 0 : (_evidence$data = evidence.data) === null || _evidence$data === void 0 ? void 0 : _evidence$data.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), evidence.action !== 'UPLOAD' && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${servAddr}/evidence/${evidence.id}`,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"clickable\",\n            name: \"close\",\n            onClick: () => {\n              onRemoveEvidence(q.id, evidence.id);\n              deleteEvidence(q.id, evidence.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, evidence.id || (evidence === null || evidence === void 0 ? void 0 : evidence.data.name), true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"uavpv6Q9gJiN1lM9BDMzuLSNkfM=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/Question.jsx"],"names":["React","useRef","parseSelect","Form","Button","Icon","servAddr","deleteEvidence","Question","q","disabled","onChangeSelect","onChangeInput","onAddEvidence","onRemoveEvidence","inputImg","id","title","code","description","data","hasOwnProperty","options","currentOption","hasData","value","unit","evidenceRequirement","justifyContent","current","click","target","Array","from","files","evidences","length","replace","map","evidence","action","filename","name"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { parseSelect } from \"../utils/utils\";\nimport { Form, Button, Icon } from \"semantic-ui-react\";\nimport { servAddr } from '../utils/constants'\nimport { deleteEvidence } from '../utils/data'\n\nconst Question = ({\n    q, disabled, onChangeSelect, onChangeInput, onAddEvidence, onRemoveEvidence\n}) => {\n    const inputImg = useRef(null);\n\n    return (\n        <div className=\"question\">\n            <h4>{`${q.id}. ${q.title} ${q.code ? `(${q.code})` : \"\"}`}</h4>\n            <p>{q.description}</p>\n            {q?.data?.hasOwnProperty(\"options\") ? (\n                <>\n                    <Form.Select\n                        disabled={disabled}\n                        name={q.id}\n                        options={parseSelect(q.data.options)}\n                        value={q.data.currentOption}\n                        onChange={onChangeSelect}\n                    />\n                </>\n            ) : (\n                    <>\n                        <Form.Group widths=\"equal\">\n                            {q.hasData && (\n                                <Form.Input\n                                    disabled={disabled}\n                                    label=\"Resposta\"\n                                    name={q.id}\n                                    value={q.data}\n                                    onChange={onChangeInput}\n                                />\n                            )}\n                            <Form.Input\n                                label=\"Valor Computado\"\n                                disabled\n                                name={q.id}\n                                value={`${q.value} ${q.unit ? `${q.unit}` : \"\"}`}\n                                onChange={onChangeInput}\n                            />\n                        </Form.Group>\n                    </>\n                )}\n            {q.evidenceRequirement !== \"NONE\" && (\n                <div\n                    name=\"evidenceRequirement\"\n                    style={{\n                        justifyContent:\n                            q.evidenceRequirement === \"REQUIRED\" ? \"space-between\" : \"flex-end\",\n                    }}\n                >\n                    {q.evidenceRequirement === \"REQUIRED\" && <p>Evidência Obrigatória*</p>}\n                    <Button\n                        disabled={disabled}\n                        icon=\"archive\"\n                        type='button'\n                        content=\"Anexar Evidência\"\n                        className=\"secondary-button\"\n                        onClick={() => inputImg.current.click()}\n                    />\n                    <input\n                        onChange={({ target }) => onAddEvidence(q.id, Array.from(target.files))}\n                        ref={inputImg}\n                        type=\"file\"\n                        multiple\n                        className=\"hidden\" />\n                </div>\n            )}\n            {!disabled && q.evidences.length > 0 && <div className='evidences'>\n                <div className={'evidence'}>\n                    <span>Baixar ZIP</span>\n                    <a href={`${servAddr}/metrics/${q.id.replace('/', '-')}/zip`} >\n                        <Icon name='download' />\n                    </a>\n                </div>\n                {q.evidences.map(evidence => (\n                    evidence.action !== 'DELETE'\n                        ? <div key={evidence.id || evidence?.data.name} className={'evidence'}>\n                            <span>{evidence.filename || evidence?.data?.name}</span>\n                            {evidence.action !== 'UPLOAD' && <a href={`${servAddr}/evidence/${evidence.id}`} >\n                                <Icon name='download' />\n                            </a>}\n                            <Icon className=\"clickable\" name='close' onClick={() => {\n                                onRemoveEvidence(q.id, evidence.id);\n                                deleteEvidence(q.id, evidence.id)\n                            }} />\n                        </div>\n                        : null\n                ))}\n            </div>}\n        </div>\n    );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}