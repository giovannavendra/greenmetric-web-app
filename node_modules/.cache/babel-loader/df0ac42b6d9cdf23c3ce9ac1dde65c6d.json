{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/DirectoryItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useContext } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst DirectoryItem = ({\n  item,\n  path = \"\"\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const id = useMemo(() => path === \"\" ? item.name : `${path}/${item.name}`);\n  if (item.hasOwnProperty(\"children\")) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"directory\",\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setOpen(!open),\n      className: \"clickable\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        color: \"blue\",\n        name: \"folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), open && item.children.map(el => /*#__PURE__*/_jsxDEV(DirectoryItem, {\n      item: el,\n      path: id\n    }, el.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric clickable\",\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      color: \"grey\",\n      name: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DirectoryItem, \"RUyhC5HfsflP61kRpHFSlUuT1+k=\");\n\n_c = DirectoryItem;\nexport default DirectoryItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectoryItem\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/DirectoryItem.jsx"],"names":["React","useMemo","useState","useContext","Icon","DirectoryItem","item","path","open","setOpen","id","name","hasOwnProperty","children","map","el"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,GAAG;AAAf,CAAD,KAAyB;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMQ,EAAE,GAAGT,OAAO,CAAC,MAAOM,IAAI,KAAK,EAAT,GAAcD,IAAI,CAACK,IAAnB,GAA2B,GAAEJ,IAAK,IAAGD,IAAI,CAACK,IAAK,EAAvD,CAAlB;AAEA,MAAIL,IAAI,CAACM,cAAL,CAAoB,UAApB,CAAJ,EACI,oBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAEF,EAA/B;AAAA,4BACI;AAAK,MAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA3B;AAAoC,MAAA,SAAS,EAAC,WAA9C;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIF,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKH,IAAI,IACDF,IAAI,CAACO,QAAL,CAAcC,GAAd,CAAmBC,EAAD,iBACd,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,EAArB;AAAuC,MAAA,IAAI,EAAEL;AAA7C,OAA8BK,EAAE,CAACJ,IAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaJ,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,EAAE,EAAED,EAAtC;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;GAAMN,a;;KAAAA,a;AA0BN,eAAeA,aAAf","sourcesContent":["import React, { useMemo, useState, useContext } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst DirectoryItem = ({ item, path = \"\" }) => {\n    const [open, setOpen] = useState(false);\n    const id = useMemo(() => (path === \"\" ? item.name : `${path}/${item.name}`));\n\n    if (item.hasOwnProperty(\"children\"))\n        return (\n            <div className=\"directory\" id={id}>\n                <div onClick={() => setOpen(!open)} className=\"clickable\">\n                    <Icon color='blue' name=\"folder\" />\n                    <p>{item.name}</p>\n                </div>\n                {open &&\n                    item.children.map((el) => (\n                        <DirectoryItem item={el} key={el.name} path={id} />\n                    ))}\n            </div>\n        );\n\n    return (\n        <div className=\"metric clickable\" id={id}>\n            <Icon color='grey' name=\"file\" />\n            <p>{item.name}</p>\n        </div>\n    );\n};\n\nexport default DirectoryItem;\n"]},"metadata":{},"sourceType":"module"}