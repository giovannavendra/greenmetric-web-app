{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/MetricScore.jsx\";\nimport React from 'react';\nimport { Dimmer, List, Header, Grid, Icon } from 'semantic-ui-react';\n\nconst MetricScore = ({\n  score,\n  short\n}) => {\n  const fullView = true && !short;\n  const scoreColor = score.value == score.points ? \"green\" : score.value == 0 ? \"red\" : \"yellow\";\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    centered: true,\n    columns: 2,\n    divided: true,\n    padded: true,\n    children: [/*#__PURE__*/_jsxDEV(Dimmer, {\n      active: score.value == null,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        inverted: true,\n        color: \"yellow\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"warning sign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 54\n        }, this), \"O valor dessa m\\xE9trica n\\xE3o entra em nenhuma das faixas.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n      verticalAlign: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          content: `(${score.code}) ${score.name}`,\n          as: \"h4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: score.ranges.map((item, i) => (fullView || item.checked) && /*#__PURE__*/_jsxDEV(List.Item, {\n            active: item.checked,\n            style: {\n              padding: 5,\n              backgroundColor: item.checked ? scoreColor : \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(List.Content, {\n              floated: \"right\",\n              children: [\"x \", item.multiplier]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n              children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                name: item.checked ? \"dot circle outline\" : \"circle outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), item.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)]\n          }, `${score.code}-range-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        textAlign: \"center\",\n        width: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          centered: true,\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            size: \"huge\",\n            color: scoreColor,\n            content: score.value,\n            subheader: `/ ${score.points}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MetricScore;\nexport default MetricScore;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetricScore\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/MetricScore.jsx"],"names":["React","Dimmer","List","Header","Grid","Icon","MetricScore","score","short","fullView","scoreColor","value","points","code","name","ranges","map","item","i","checked","padding","backgroundColor","multiplier","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Dimmer, List, Header, Grid, Icon } from 'semantic-ui-react';\n\nconst MetricScore = ({ score, short }) => {\n    const fullView = true && !short;\n    const scoreColor = score.value == score.points ? \"green\" : score.value == 0 ? \"red\" : \"yellow\";\n\n    return (\n        <Grid centered columns={2} divided padded>\n            <Dimmer active={score.value == null}>\n                <Header icon inverted color=\"yellow\"><Icon name=\"warning sign\"/>O valor dessa métrica não entra em nenhuma das faixas.</Header>\n            </Dimmer>\n            <Grid.Row verticalAlign=\"middle\">\n                <Grid.Column>\n                    <Header content={`(${score.code}) ${score.name}`} as=\"h4\" />\n                    <List>\n                        {score.ranges.map((item, i) => ((fullView || item.checked) &&\n                            <List.Item\n                                key={`${score.code}-range-${i}`}\n                                active={item.checked}\n                                style={{\n                                    padding: 5,\n                                    backgroundColor: item.checked ? scoreColor : \"none\"\n                                }}\n                            >\n                                <List.Content floated='right'>x {item.multiplier}</List.Content>\n                                <List.Content>\n                                    <List.Icon name={item.checked ? \"dot circle outline\" : \"circle outline\"} />{item.label}\n                                </List.Content>\n                            </List.Item>\n                        ))}\n                    </List>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" width={3}>\n                    <Grid.Row centered>\n                        <Header size=\"huge\"\n                            color={scoreColor}\n                            content={score.value}\n                            subheader={`/ ${score.points}`}\n                        />\n                    </Grid.Row>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n\n\nexport default MetricScore;\n"]},"metadata":{},"sourceType":"module"}