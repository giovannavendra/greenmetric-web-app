{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/AppForms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { AppContext, dispatchLoading, dispatchSetMetric } from \"../context/AppContext\";\nimport { putMetric } from \"../utils/data\";\nimport Question from \"./Question\";\n\nconst AppForms = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n\n  const onChangeSelect = (e, {\n    name,\n    value\n  }) => {\n    dispatch(dispatchSetMetric(name, value));\n  };\n\n  const onChangeInput = ({\n    target\n  }) => {\n    dispatch(dispatchSetMetric(target.name, target.value));\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch(dispatchLoading(true));\n\n    try {\n      await Promise.all(state.metrics.map(el => {\n        var _el$data;\n\n        if (el === null || el === void 0 ? void 0 : (_el$data = el.data) === null || _el$data === void 0 ? void 0 : _el$data.hasOwnProperty(\"options\")) putMetric(el.id, el.data.currentOption);else putMetric(el.id, el.data);\n      }));\n    } catch (e) {\n      console.log(`Server Response: ${e}`);\n    }\n\n    dispatch(dispatchLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [state.metrics.map(el => /*#__PURE__*/_jsxDEV(Question, {\n        q: el,\n        onChangeInput: onChangeInput,\n        onChangeSelect: onChangeSelect\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Button, {\n        color: \"black\",\n        size: \"large\",\n        type: \"submit\",\n        className: \"centered\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppForms, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\n_c = AppForms;\nexport default AppForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppForms\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/AppForms.jsx"],"names":["React","useContext","Form","AppContext","dispatchLoading","dispatchSetMetric","putMetric","Question","AppForms","state","dispatch","onChangeSelect","e","name","value","onChangeInput","target","onSubmit","preventDefault","Promise","all","metrics","map","el","data","hasOwnProperty","id","currentOption","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SACEC,UADF,EAEEC,eAFF,EAGEC,iBAHF,QAIO,uBAJP;AAKA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,UAAU,CAACE,UAAD,CAAtC;;AAEA,QAAMQ,cAAc,GAAG,CAACC,CAAD,EAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAJ,KAAwB;AAC7CJ,IAAAA,QAAQ,CAACL,iBAAiB,CAACQ,IAAD,EAAOC,KAAP,CAAlB,CAAR;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACpCN,IAAAA,QAAQ,CAACL,iBAAiB,CAACW,MAAM,CAACH,IAAR,EAAcG,MAAM,CAACF,KAArB,CAAlB,CAAR;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAG,MAAOL,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACM,cAAF;AACAR,IAAAA,QAAQ,CAACN,eAAe,CAAC,IAAD,CAAhB,CAAR;;AACA,QAAI;AACF,YAAMe,OAAO,CAACC,GAAR,CACJX,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAmBC,EAAD,IAAQ;AAAA;;AACxB,YAAIA,EAAJ,aAAIA,EAAJ,mCAAIA,EAAE,CAAEC,IAAR,6CAAI,SAAUC,cAAV,CAAyB,SAAzB,CAAJ,EACEnB,SAAS,CAACiB,EAAE,CAACG,EAAJ,EAAQH,EAAE,CAACC,IAAH,CAAQG,aAAhB,CAAT,CADF,KAEKrB,SAAS,CAACiB,EAAE,CAACG,EAAJ,EAAQH,EAAE,CAACC,IAAX,CAAT;AACN,OAJD,CADI,CAAN;AAOD,KARD,CAQE,OAAOZ,CAAP,EAAU;AACVgB,MAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBjB,CAAE,EAAlC;AACD;;AACDF,IAAAA,QAAQ,CAACN,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,GAfD;;AAiBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEa,QAAhB;AAAA,iBACGR,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAmBC,EAAD,iBACjB,QAAC,QAAD;AACE,QAAA,CAAC,EAAEA,EADL;AAGE,QAAA,aAAa,EAAER,aAHjB;AAIE,QAAA,cAAc,EAAEJ;AAJlB,SAEOY,EAAE,CAACG,EAFV;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eASE,QAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,SAAS,EAAC,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlDD;;GAAMlB,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport {\n  AppContext,\n  dispatchLoading,\n  dispatchSetMetric,\n} from \"../context/AppContext\";\nimport { putMetric } from \"../utils/data\";\nimport Question from \"./Question\";\n\nconst AppForms = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const onChangeSelect = (e, { name, value }) => {\n    dispatch(dispatchSetMetric(name, value));\n  };\n\n  const onChangeInput = ({ target }) => {\n    dispatch(dispatchSetMetric(target.name, target.value));\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(dispatchLoading(true));\n    try {\n      await Promise.all(\n        state.metrics.map((el) => {\n          if (el?.data?.hasOwnProperty(\"options\"))\n            putMetric(el.id, el.data.currentOption);\n          else putMetric(el.id, el.data);\n        })\n      );\n    } catch (e) {\n      console.log(`Server Response: ${e}`);\n    }\n    dispatch(dispatchLoading(false));\n  };\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        {state.metrics.map((el) => (\n          <Question\n            q={el}\n            key={el.id}\n            onChangeInput={onChangeInput}\n            onChangeSelect={onChangeSelect}\n          />\n        ))}\n        <Form.Button\n          color=\"black\"\n          size=\"large\"\n          type=\"submit\"\n          className=\"centered\"\n        >\n          Enviar\n        </Form.Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AppForms;\n"]},"metadata":{},"sourceType":"module"}