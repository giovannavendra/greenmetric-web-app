{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/ScoreEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFieldArray, Controller } from 'react-hook-form';\nimport { Button, Form, Header, Icon } from 'semantic-ui-react';\n\nconst emptyRangeOption = () => ({\n  label: '',\n  start: 0,\n  end: 0,\n  option: '',\n  multiplier: 0\n});\n\nconst ScoreEditor = ({\n  control,\n  isSelect,\n  options\n}) => {\n  _s();\n\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: 'score.ranges'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Informa\\xE7\\xF5es de pontua\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Configura\\xE7\\xE3o de pontua\\xE7\\xE3o para m\\xE9trica \\xE9 opcional, mas caso for preenchido, todos os campos s\\xE3o obrigat\\xF3rios.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"score.name\",\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n          onChange: (_, p) => onChange(p.value),\n          value: value,\n          placeholder: \"T\\xEDtulo\",\n          label: \"T\\xEDtulo\",\n          name: \"score.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"score.code\",\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n          onChange: (_, p) => onChange(p.value),\n          value: value,\n          label: \"C\\xF3digo\",\n          placeholder: \"C\\xF3digo\",\n          name: \"score.code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"score.points\",\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n          onChange: (_, p) => onChange(p.value),\n          value: value,\n          label: \"Pontua\\xE7\\xE3o\",\n          placeholder: \"Pontua\\xE7\\xE3o\",\n          name: \"score.points\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Faixas\", /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Adicionar\",\n        onClick: e => {\n          e.preventDefault();\n          append({ ...emptyRangeOption()\n          });\n        },\n        style: {\n          marginLeft: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), fields.map((range, i) => /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: `score.ranges[${i}].label`,\n        defaultValue: range.label,\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n          width: 8,\n          onChange: (_, p) => onChange(p.value),\n          value: value,\n          label: \"Texto\",\n          placeholder: \"Texto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), isSelect ? /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: `score.ranges[${i}].option`,\n        defaultValue: range.option,\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Form.Select, {\n          width: 6,\n          onChange: (_, p) => onChange(p.value),\n          value: value,\n          options: options,\n          label: \"Op\\xE7\\xE3o\",\n          placeholder: \"Qual op\\xE7\\xE3o cai nessa faixa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: `score.ranges[${i}].start`,\n          defaultValue: range.start,\n          render: ({\n            onChange,\n            value\n          }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n            width: 2,\n            onChange: (_, p) => onChange(p.value),\n            value: value,\n            label: \"In\\xEDcio (>=)\",\n            placeholder: \"Valor de in\\xEDcio\",\n            type: \"number\",\n            step: \"0.001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: `score.ranges[${i}].end`,\n          defaultValue: range.end,\n          render: ({\n            onChange,\n            value\n          }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n            width: 2,\n            onChange: (_, p) => onChange(p.value),\n            value: value,\n            label: \"Fim (<=)\",\n            placeholder: \"Valor de fim\",\n            type: \"number\",\n            step: \"0.001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: `score.ranges[${i}].multiplier`,\n        defaultValue: range.multiplier,\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Form.Input, {\n          width: 2,\n          onChange: (_, p) => onChange(p.value),\n          value: value,\n          label: \"Peso\",\n          placeholder: \"Multiplicador\",\n          type: \"number\",\n          step: \"0.001\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"close\",\n        link: true,\n        onClick: () => remove(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, range.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScoreEditor, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = ScoreEditor;\nexport default ScoreEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreEditor\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/ScoreEditor.jsx"],"names":["React","useFieldArray","Controller","Button","Form","Header","Icon","emptyRangeOption","label","start","end","option","multiplier","ScoreEditor","control","isSelect","options","fields","append","remove","name","onChange","value","_","p","e","preventDefault","marginLeft","map","range","i","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFieldArray, Controller } from 'react-hook-form';\nimport { Button, Form, Header, Icon } from 'semantic-ui-react';\n\nconst emptyRangeOption = () => ({\n    label: '',\n    start: 0,\n    end: 0,\n    option: '',\n    multiplier: 0,\n});\n\nconst ScoreEditor = ({ control, isSelect, options }) => {\n    const { fields, append, remove } = useFieldArray({\n        control,\n        name: 'score.ranges',\n    });\n\n    return (\n        <div>\n            <Header>Informações de pontuação</Header>\n            <p>Configuração de pontuação para métrica é opcional, mas caso for preenchido, todos os campos são obrigatórios.</p>\n            <Form.Group widths='equal'>\n                <Controller control={control} name=\"score.name\" render={({ onChange, value }) => (\n                    <Form.Input\n                        onChange={(_, p) => onChange(p.value)}\n                        value={value}\n                        placeholder=\"Título\"\n                        label=\"Título\"\n                        name='score.name'\n                    />\n                )} />\n                <Controller control={control} name=\"score.code\" render={({ onChange, value }) => (\n                    <Form.Input\n                        onChange={(_, p) => onChange(p.value)}\n                        value={value}\n                        label=\"Código\"\n                        placeholder=\"Código\"\n                        name='score.code'\n                    />\n                )} />\n                <Controller control={control} name=\"score.points\" render={({ onChange, value }) => (\n                    <Form.Input\n                        onChange={(_, p) => onChange(p.value)}\n                        value={value}\n                        label=\"Pontuação\"\n                        placeholder=\"Pontuação\"\n                        name='score.points'\n                        type=\"number\"\n                    />\n                )} />\n            </Form.Group>\n            <Header>Faixas<Button content=\"Adicionar\" onClick={e => { e.preventDefault(); append({ ...emptyRangeOption() }) }} style={{ marginLeft: 10 }} /></Header>\n            {fields.map((range, i) => (\n                <Form.Group key={range.id}>\n                    <Controller control={control} name={`score.ranges[${i}].label`} defaultValue={range.label} render={({ onChange, value }) => (\n                        <Form.Input\n                            width={8}\n                            onChange={(_, p) => onChange(p.value)}\n                            value={value}\n                            label=\"Texto\"\n                            placeholder=\"Texto\"\n                        />\n                    )} />\n                    {isSelect ? (\n                        <Controller control={control} name={`score.ranges[${i}].option`} defaultValue={range.option} render={({ onChange, value }) => (\n                            <Form.Select\n                                width={6}\n                                onChange={(_, p) => onChange(p.value)}\n                                value={value}\n                                options={options}\n                                label=\"Opção\"\n                                placeholder=\"Qual opção cai nessa faixa\"\n                            />\n                        )} />\n                    ) : (<>\n                        <Controller control={control} name={`score.ranges[${i}].start`} defaultValue={range.start} render={({ onChange, value }) => (\n                            <Form.Input\n                                width={2}\n                                onChange={(_, p) => onChange(p.value)}\n                                value={value}\n                                label=\"Início (&gt;=)\"\n                                placeholder=\"Valor de início\"\n                                type=\"number\"\n                                step=\"0.001\"\n                            />\n                        )} />\n                        <Controller control={control} name={`score.ranges[${i}].end`} defaultValue={range.end} render={({ onChange, value }) => (\n                            <Form.Input\n                                width={2}\n                                onChange={(_, p) => onChange(p.value)}\n                                value={value}\n                                label=\"Fim (&lt;=)\"\n                                placeholder=\"Valor de fim\"\n                                type=\"number\"\n                                step=\"0.001\"\n                            />\n                        )} />\n                    </>)}\n                    <Controller control={control} name={`score.ranges[${i}].multiplier`} defaultValue={range.multiplier} render={({ onChange, value }) => (\n                        <Form.Input\n                            width={2}\n                            onChange={(_, p) => onChange(p.value)}\n                            value={value}\n                            label=\"Peso\"\n                            placeholder=\"Multiplicador\"\n                            type=\"number\"\n                            step=\"0.001\"\n                        />\n                    )} />\n                    <Icon name=\"close\" link onClick={() => remove(i)} />\n                </Form.Group>\n            ))}\n        </div>\n    )\n}\n\nexport default ScoreEditor;"]},"metadata":{},"sourceType":"module"}