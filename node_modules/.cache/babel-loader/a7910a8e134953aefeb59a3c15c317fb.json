{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/Question.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { parseSelect } from \"../utils/utils\";\nimport { Form, Button, Icon } from \"semantic-ui-react\";\nimport { servAddr } from '../utils/constants';\nimport { deleteEvidence } from '../utils/data';\n\nconst Question = ({\n  q,\n  disabled,\n  onChangeSelect,\n  onChangeInput,\n  onAddEvidence,\n  onRemoveEvidence\n}) => {\n  _s();\n\n  var _q$data;\n\n  const inputImg = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `${q.id}. ${q.title} ${q.code ? `(${q.code})` : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: q.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), ((_q$data = q.data) === null || _q$data === void 0 ? void 0 : _q$data.hasOwnProperty(\"options\")) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form.Select, {\n        disabled: disabled,\n        name: q.id,\n        options: parseSelect(q.data.options),\n        value: q.data.currentOption,\n        onChange: onChangeSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [q.hasData && /*#__PURE__*/_jsxDEV(Form.Input, {\n          disabled: disabled,\n          label: \"Valor\",\n          name: q.id,\n          value: q.data,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Valor Computado\",\n          disabled: true,\n          name: q.id,\n          value: q.value,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false), q.evidenceRequirement !== \"NONE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      name: \"evidenceRequirement\",\n      style: {\n        justifyContent: q.evidenceRequirement === \"REQUIRED\" ? \"space-between\" : \"flex-end\"\n      },\n      children: [q.evidenceRequirement === \"REQUIRED\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Evid\\xEAncia Obrigat\\xF3ria*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disabled,\n        icon: \"archive\",\n        type: \"button\",\n        content: \"Anexar Evid\\xEAncia\",\n        className: \"secondary-button\",\n        onClick: () => inputImg.current.click()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: ({\n          target\n        }) => onAddEvidence(q.id, Array.from(target.files)),\n        ref: inputImg,\n        type: \"file\",\n        multiple: true,\n        className: \"hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), !disabled && q.evidences.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"evidences\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'evidence',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Download All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${servAddr}/metrics/${q.id.replace('/', '-')}/zip`,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), q.evidences.map(evidence => {\n        var _evidence$data;\n\n        return evidence.action !== 'DELETE' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'evidence',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: evidence.filename || (evidence === null || evidence === void 0 ? void 0 : (_evidence$data = evidence.data) === null || _evidence$data === void 0 ? void 0 : _evidence$data.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this), evidence.action !== 'UPLOAD' && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${servAddr}/evidence/${evidence.id}`,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"clickable\",\n            name: \"close\",\n            onClick: () => {\n              onRemoveEvidence(q.id, evidence.id);\n              deleteEvidence(q.id, evidence.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 8\n          }, this)]\n        }, evidence.id || (evidence === null || evidence === void 0 ? void 0 : evidence.data.name), true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Question, \"uavpv6Q9gJiN1lM9BDMzuLSNkfM=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/Question.jsx"],"names":["React","useRef","parseSelect","Form","Button","Icon","servAddr","deleteEvidence","Question","q","disabled","onChangeSelect","onChangeInput","onAddEvidence","onRemoveEvidence","inputImg","id","title","code","description","data","hasOwnProperty","options","currentOption","hasData","value","evidenceRequirement","justifyContent","current","click","target","Array","from","files","evidences","length","replace","map","evidence","action","filename","name"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { parseSelect } from \"../utils/utils\";\nimport { Form, Button, Icon } from \"semantic-ui-react\";\nimport { servAddr } from '../utils/constants'\nimport { deleteEvidence } from '../utils/data'\n\nconst Question = ({\n\tq, disabled, onChangeSelect, onChangeInput, onAddEvidence, onRemoveEvidence\n}) => {\n\tconst inputImg = useRef(null);\n\n\treturn (\n\t\t<div className=\"question\">\n\t\t\t<h4>{`${q.id}. ${q.title} ${q.code ? `(${q.code})` : \"\"}`}</h4>\n\t\t\t<p>{q.description}</p>\n\t\t\t{q.data?.hasOwnProperty(\"options\") ? (\n\t\t\t\t<>\n\t\t\t\t\t<Form.Select\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tname={q.id}\n\t\t\t\t\t\toptions={parseSelect(q.data.options)}\n\t\t\t\t\t\tvalue={q.data.currentOption}\n\t\t\t\t\t\tonChange={onChangeSelect}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t{q.hasData && (\n\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\tlabel=\"Valor\"\n\t\t\t\t\t\t\t\t\tname={q.id}\n\t\t\t\t\t\t\t\t\tvalue={q.data}\n\t\t\t\t\t\t\t\t\tonChange={onChangeInput}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\tlabel=\"Valor Computado\"\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tname={q.id}\n\t\t\t\t\t\t\t\tvalue={q.value}\n\t\t\t\t\t\t\t\tonChange={onChangeInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t{q.evidenceRequirement !== \"NONE\" && (\n\t\t\t\t<div\n\t\t\t\t\tname=\"evidenceRequirement\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tjustifyContent:\n\t\t\t\t\t\t\tq.evidenceRequirement === \"REQUIRED\" ? \"space-between\" : \"flex-end\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{q.evidenceRequirement === \"REQUIRED\" && <p>Evidência Obrigatória*</p>}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ticon=\"archive\"\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tcontent=\"Anexar Evidência\"\n\t\t\t\t\t\tclassName=\"secondary-button\"\n\t\t\t\t\t\tonClick={() => inputImg.current.click()}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={({ target }) => onAddEvidence(q.id, Array.from(target.files))}\n\t\t\t\t\t\tref={inputImg}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tclassName=\"hidden\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!disabled && q.evidences.length > 0 && <div className='evidences'>\n\t\t\t\t<div className={'evidence'}>\n\t\t\t\t\t<span>Download All</span>\n\t\t\t\t\t<a href={`${servAddr}/metrics/${q.id.replace('/', '-')}/zip`} >\n\t\t\t\t\t\t<Icon name='download' />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t{q.evidences.map(evidence => (\n\t\t\t\t\tevidence.action !== 'DELETE'\n\t\t\t\t\t\t? <div key={evidence.id || evidence?.data.name} className={'evidence'}>\n\t\t\t\t\t\t\t<span>{evidence.filename || evidence?.data?.name}</span>\n\t\t\t\t\t\t\t{evidence.action !== 'UPLOAD' && <a href={`${servAddr}/evidence/${evidence.id}`} >\n\t\t\t\t\t\t\t\t<Icon name='download' />\n\t\t\t\t\t\t\t</a>}\n\t\t\t\t\t\t\t<Icon className=\"clickable\" name='close' onClick={() => {\n\t\t\t\t\t\t\t\tonRemoveEvidence(q.id, evidence.id);\n\t\t\t\t\t\t\t\tdeleteEvidence(q.id, evidence.id)\n\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t))}\n\t\t\t</div>}\n\t\t</div >\n\t);\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}