{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/AdminLoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Form, Transition, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { signIn } from \"../api/auth\";\nimport { AppContext, dispatchLogin } from \"../context/AppContext\";\nimport urls from \"../utils/urls\";\n\nconst AdminLoginForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [animated, setAnimated] = useState(true);\n  const [response, setResponse] = useState('');\n  const [reset, setReset] = useState('false');\n  const {\n    dispatch\n  } = useContext(AppContext);\n\n  const failSubmit = () => {\n    setResponse(\"FAILURE\");\n    setAnimated(!animated);\n  };\n\n  const onSubmit = async e => {\n    setLoading(true);\n    e.preventDefault();\n\n    try {\n      const result = await signIn(username, password);\n\n      if (result.response.code == 200) {\n        dispatch(dispatchLogin({\n          username,\n          password\n        }));\n        setResponse(\"SUCCESS\");\n        setAnimated(!animated);\n        history.push(urls.forms);\n      } else {\n        failSubmit();\n      }\n    } catch (err) {\n      console.error('Failed to authenticate', err);\n      failSubmit();\n    } finally {\n      setLoading(false);\n      clearTimeout(reset);\n      setReset(setTimeout(() => setResponse(null), 1000));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Acesso administrativo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        required: true,\n        name: \"username\",\n        label: \"Usu\\xE1rio\",\n        onChange: (_, {\n          value\n        }) => setUsername(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        label: \"Senha\",\n        onChange: (_, {\n          value\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Transition, {\n        animation: response == \"FAILURE\" ? \"shake\" : \"\",\n        duration: 300,\n        visible: animated,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Form.Button, {\n            primary: true,\n            loading: loading,\n            disabled: loading,\n            negative: response == \"FAILURE\",\n            positive: response == \"SUCCESS\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminLoginForm, \"pq6mzHOzMPvhlhAZ4pW28PBzFzY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminLoginForm;\nexport default AdminLoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLoginForm\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/AdminLoginForm.jsx"],"names":["React","useState","useContext","Form","Transition","Container","useHistory","signIn","AppContext","dispatchLogin","urls","AdminLoginForm","history","username","setUsername","password","setPassword","loading","setLoading","animated","setAnimated","response","setResponse","reset","setReset","dispatch","failSubmit","onSubmit","e","preventDefault","result","code","push","forms","err","console","error","clearTimeout","setTimeout","_","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Form, Transition, Container } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { signIn } from \"../api/auth\";\nimport {\n  AppContext,\n  dispatchLogin,\n} from \"../context/AppContext\";\nimport urls from \"../utils/urls\";\n\nconst AdminLoginForm = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [animated, setAnimated] = useState(true);\n  const [response, setResponse] = useState('');\n  const [reset, setReset] = useState('false');\n  const { dispatch } = useContext(AppContext);\n\n  const failSubmit = () => {\n    setResponse(\"FAILURE\");\n    setAnimated(!animated);\n  };\n\n  const onSubmit = async e => {\n    setLoading(true);\n\n    e.preventDefault();\n\n    try {\n      const result = await signIn(username, password);\n      if (result.response.code == 200) {\n        dispatch(dispatchLogin({\n          username,\n          password\n        }))\n        setResponse(\"SUCCESS\");\n        setAnimated(!animated);\n\n        history.push(urls.forms);\n      } else {\n        failSubmit();\n      }\n    } catch (err) {\n      console.error('Failed to authenticate', err);\n      failSubmit()\n    } finally {\n      setLoading(false);\n      clearTimeout(reset);\n      setReset(setTimeout(() => setResponse(null), 1000));\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <h3>Acesso administrativo</h3>\n      <Form onSubmit={onSubmit}>\n        <Form.Input required name=\"username\" label=\"UsuÃ¡rio\" onChange={(_, { value }) => setUsername(value)} />\n        <Form.Input type=\"password\" required name=\"password\" label=\"Senha\" onChange={(_, { value }) => setPassword(value)} />\n\n        <Transition\n          animation={response == \"FAILURE\" ? \"shake\" : \"\"}\n          duration={300}\n          visible={animated}\n        >\n          <Container>\n          <Form.Button \n            primary\n            loading={loading}\n            disabled={loading}\n            negative={response == \"FAILURE\"}\n            positive={response == \"SUCCESS\"}\n          >Entrar</Form.Button>\n          </Container>\n        </Transition>\n      </Form>\n    </React.Fragment>\n  );\n}\n\nexport default AdminLoginForm;\n"]},"metadata":{},"sourceType":"module"}