{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/FormsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { getForms, refreshTokenForm } from \"../utils/data\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { EditFormsContext, defaultEditFormsContext, dispatchSetId, dispatchSetTitle, dispatchAddDir, dispatchSetEdit, dispatchReset } from \"../context/EditFormsContext\";\nimport { deleteForms } from '../utils/data';\n\nconst FormsList = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(EditFormsContext);\n  const [formsList, setFormsList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getForms();\n      setFormsList(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const onEditForms = forms => {\n    dispatch(dispatchReset());\n\n    if (forms) {\n      dispatch(dispatchSetId(forms.id));\n      dispatch(dispatchSetTitle(forms.title));\n      forms.metrics.map(metric => dispatch(dispatchAddDir(metric)));\n    }\n\n    dispatch(dispatchSetEdit(true));\n  };\n\n  const updateToken = async formsId => {\n    const {\n      data\n    } = await refreshTokenForm(formsId);\n    setFormsList(formsList.map(form => form.id === formsId ? { ...form,\n      accessToken: data\n    } : form));\n  };\n\n  const onDeleteForms = async forms => {\n    await deleteForms(forms.id);\n    setFormsList(formsList.filter(el => el.id !== forms.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forms-list \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerenciar Formul\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), formsList.map(forms => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forms-card bordered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flx-r-sb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: forms.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flx-r flx-w\",\n            children: [forms.metrics.slice(0, 5).map(metric => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: metric\n            }, metric, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)), forms.metrics.length > 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms-card-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forms-card-actions-icons\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"pencil\",\n              size: \"large\",\n              className: \"clickable\",\n              onClick: () => onEditForms(forms)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"close\",\n              size: \"large\",\n              className: \"clickable\",\n              onClick: () => onDeleteForms(forms)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forms-card-actions-access_token\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Token de Acesso: \", forms.accessToken, /*#__PURE__*/_jsxDEV(Button, {\n                color: \"blue\",\n                onClick: () => {\n                  navigator.clipboard.writeText(forms.accessToken);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), \"Copiar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"blue\",\n                onClick: () => updateToken(forms.id),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), \"Atualizar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"blue\",\n              onClick: () => {\n                navigator.clipboard.writeText(forms.accessToken);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), \"Copiar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"blue\",\n              onClick: () => updateToken(forms.id),\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), \"Atualizar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, forms.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"add\",\n        content: \"Criar novo formul\\xE1rio\",\n        basic: true,\n        color: \"blue\",\n        onClick: () => onEditForms()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormsList, \"NWf5+KJy5Jw/xPo94JmvQxYifZw=\");\n\n_c = FormsList;\nexport default FormsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsList\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/FormsList.jsx"],"names":["React","useState","useEffect","useContext","getForms","refreshTokenForm","Button","Icon","EditFormsContext","defaultEditFormsContext","dispatchSetId","dispatchSetTitle","dispatchAddDir","dispatchSetEdit","dispatchReset","deleteForms","FormsList","state","dispatch","formsList","setFormsList","fetchData","data","onEditForms","forms","id","title","metrics","map","metric","updateToken","formsId","form","accessToken","onDeleteForms","filter","el","slice","length","navigator","clipboard","writeText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { getForms, refreshTokenForm } from \"../utils/data\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport {\n    EditFormsContext,\n    defaultEditFormsContext,\n    dispatchSetId,\n    dispatchSetTitle,\n    dispatchAddDir,\n    dispatchSetEdit,\n    dispatchReset,\n} from \"../context/EditFormsContext\";\nimport { deleteForms } from '../utils/data'\n\nconst FormsList = () => {\n    const { state, dispatch } = useContext(EditFormsContext);\n\n    const [formsList, setFormsList] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const { data } = await getForms();\n            setFormsList(data);\n        };\n\n        fetchData();\n    }, []);\n\n    const onEditForms = (forms) => {\n        dispatch(dispatchReset());\n        if (forms) {\n            dispatch(dispatchSetId(forms.id));\n            dispatch(dispatchSetTitle(forms.title));\n            forms.metrics.map((metric) => dispatch(dispatchAddDir(metric)));\n        }\n\n        dispatch(dispatchSetEdit(true));\n    };\n\n    const updateToken = async (formsId) => {\n        const { data } = await refreshTokenForm(formsId)\n        setFormsList(formsList.map(form => form.id === formsId ? { ...form, accessToken: data } : form))\n    }\n\n    const onDeleteForms = async (forms) => {\n        await deleteForms(forms.id)\n        setFormsList(formsList.filter(el => el.id !== forms.id))\n    };\n\n    return (\n        <div className=\"forms-list \">\n            <h1>Gerenciar Formulários</h1>\n            {formsList.map((forms) => (\n                <div key={forms.id} className={\"forms-card bordered\"}>\n                    <div className=\"flx-r-sb\">\n                        <div>\n                            <h3>{forms.title}</h3>\n                            <div className=\"flx-r flx-w\">\n                                {forms.metrics.slice(0, 5).map((metric) => (\n                                    <span key={metric}>{metric}</span>\n                                ))}\n                                {forms.metrics.length > 5 && <span>...</span>}\n                            </div>\n                        </div>\n                        <div className='forms-card-actions'>\n                            <div className='forms-card-actions-icons'>\n                                <Icon\n                                    name=\"pencil\"\n                                    size=\"large\"\n                                    className=\"clickable\"\n                                    onClick={() => onEditForms(forms)}\n                                />\n                                <Icon\n                                    name=\"close\"\n                                    size=\"large\"\n                                    className=\"clickable\"\n                                    onClick={() => onDeleteForms(forms)}\n                                />\n                            </div>\n                            <div className='forms-card-actions-access_token'>\n                                <span>\n                                    Token de Acesso: {forms.accessToken}\n                                    <Button color='blue' onClick={() => {navigator.clipboard.writeText(forms.accessToken)} }>\n                                        <Icon  name='copy' /> \n                                        Copiar\n                                    </Button>\n                                    <Button color='blue' onClick={() => updateToken(forms.id)}>\n                                        <Icon name='refresh'/> \n                                        Atualizar  \n                                    </Button>\n                                    \n                                </span>\n                                <Button color='blue' onClick={() => {navigator.clipboard.writeText(forms.accessToken)} }>\n                                    <Icon  name='copy' /> \n                                    Copiar\n                                </Button>\n                                <Button color='blue' onClick={() => updateToken(forms.id)}>\n                                    <Icon name='refresh'/> \n                                    Atualizar  \n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n            <div className=\"centered\">\n                <Button\n                    icon=\"add\"\n                    content=\"Criar novo formulário\"\n                    basic\n                    color=\"blue\"\n                    onClick={() => onEditForms()}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default FormsList;\n"]},"metadata":{},"sourceType":"module"}