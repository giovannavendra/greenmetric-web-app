{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/FormsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { getForms, refreshTokenForm } from \"../utils/data\";\nimport { Button, Icon, Grid, Container } from \"semantic-ui-react\";\nimport { EditFormsContext, defaultEditFormsContext, dispatchSetId, dispatchSetTitle, dispatchAddDir, dispatchSetEdit, dispatchReset } from \"../context/EditFormsContext\";\nimport { deleteForms } from '../utils/data';\nimport IconForms from \"../images/icon_forms.png\";\n\nconst FormsList = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(EditFormsContext);\n  const [formsList, setFormsList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getForms();\n      setFormsList(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const onEditForms = forms => {\n    dispatch(dispatchReset());\n\n    if (forms) {\n      dispatch(dispatchSetId(forms.id));\n      dispatch(dispatchSetTitle(forms.title));\n      forms.metrics.map(metric => dispatch(dispatchAddDir(metric)));\n    }\n\n    dispatch(dispatchSetEdit(true));\n  };\n\n  const updateToken = async formsId => {\n    const {\n      data\n    } = await refreshTokenForm(formsId);\n    setFormsList(formsList.map(form => form.id === formsId ? { ...form,\n      accessToken: data\n    } : form));\n  };\n\n  const onDeleteForms = async forms => {\n    await deleteForms(forms.id);\n    setFormsList(formsList.filter(el => el.id !== forms.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forms-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gerenciar Formul\\xE1rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forms-list\",\n        children: formsList.map(forms => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms-card bordered\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flx-r-sb\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: forms.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flx-r flx-w\",\n                children: [forms.metrics.slice(0, 5).map(metric => /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: metric\n                }, metric, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this)), forms.metrics.length > 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forms-card-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forms-card-actions-icons\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"pencil\",\n                  size: \"large\",\n                  className: \"clickable\",\n                  onClick: () => onEditForms(forms)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"close\",\n                  size: \"large\",\n                  className: \"clickable\",\n                  onClick: () => onDeleteForms(forms)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forms-card-actions-access_token\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Token de Acesso: \", forms.accessToken, /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      border: 'none'\n                    },\n                    onClick: () => {\n                      navigator.clipboard.writeText(forms.accessToken);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"copy\",\n                      color: \"blue\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 141\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      border: 'none'\n                    },\n                    onClick: () => updateToken(forms.id),\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"refresh\",\n                      color: \"blue\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 112\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, forms.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: IconForms,\n        alt: \"icon\",\n        className: \"icon-forms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"add\",\n        content: \"Criar novo formul\\xE1rio\",\n        basic: true,\n        color: \"blue\",\n        onClick: () => onEditForms()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormsList, \"NWf5+KJy5Jw/xPo94JmvQxYifZw=\");\n\n_c = FormsList;\nexport default FormsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsList\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/FormsList.jsx"],"names":["React","useState","useEffect","useContext","getForms","refreshTokenForm","Button","Icon","Grid","Container","EditFormsContext","defaultEditFormsContext","dispatchSetId","dispatchSetTitle","dispatchAddDir","dispatchSetEdit","dispatchReset","deleteForms","IconForms","FormsList","state","dispatch","formsList","setFormsList","fetchData","data","onEditForms","forms","id","title","metrics","map","metric","updateToken","formsId","form","accessToken","onDeleteForms","filter","el","slice","length","border","navigator","clipboard","writeText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { getForms, refreshTokenForm } from \"../utils/data\";\nimport { Button, Icon, Grid, Container } from \"semantic-ui-react\";\nimport {\n    EditFormsContext,\n    defaultEditFormsContext,\n    dispatchSetId,\n    dispatchSetTitle,\n    dispatchAddDir,\n    dispatchSetEdit,\n    dispatchReset,\n} from \"../context/EditFormsContext\";\nimport { deleteForms } from '../utils/data';\nimport IconForms from \"../images/icon_forms.png\";\n\nconst FormsList = () => {\n    const { state, dispatch } = useContext(EditFormsContext);\n\n    const [formsList, setFormsList] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const { data } = await getForms();\n            setFormsList(data);\n        };\n\n        fetchData();\n    }, []);\n\n    const onEditForms = (forms) => {\n        dispatch(dispatchReset());\n        if (forms) {\n            dispatch(dispatchSetId(forms.id));\n            dispatch(dispatchSetTitle(forms.title));\n            forms.metrics.map((metric) => dispatch(dispatchAddDir(metric)));\n        }\n\n        dispatch(dispatchSetEdit(true));\n    };\n\n    const updateToken = async (formsId) => {\n        const { data } = await refreshTokenForm(formsId)\n        setFormsList(formsList.map(form => form.id === formsId ? { ...form, accessToken: data } : form))\n    }\n\n    const onDeleteForms = async (forms) => {\n        await deleteForms(forms.id)\n        setFormsList(formsList.filter(el => el.id !== forms.id))\n    };\n\n    return (\n\n        \n        <div>\n            <div className=\"forms-header\"><h1>Gerenciar Formulários</h1></div>\n            <div className=\"forms\">\n                <div className=\"forms-list\">\n                {formsList.map((forms) => (\n                    <div key={forms.id} className={\"forms-card bordered\"}>\n                        <div className=\"flx-r-sb\">\n                            <div>\n                                <h3>{forms.title}</h3>\n                                <div className=\"flx-r flx-w\">\n                                    {forms.metrics.slice(0, 5).map((metric) => (\n                                        <span key={metric}>{metric}</span>\n                                    ))}\n                                    {forms.metrics.length > 5 && <span>...</span>}\n                                </div>\n                            </div>\n                            <div className='forms-card-actions'>\n                                <div className='forms-card-actions-icons'>\n                                    <Icon\n                                        name=\"pencil\"\n                                        size=\"large\"\n                                        className=\"clickable\"\n                                        onClick={() => onEditForms(forms)}\n                                    />\n                                    <Icon\n                                        name=\"close\"\n                                        size=\"large\"\n                                        className=\"clickable\"\n                                        onClick={() => onDeleteForms(forms)}\n                                    />\n                                </div>\n                                <div className='forms-card-actions-access_token'>\n                                    <span>\n                                        Token de Acesso: {forms.accessToken}\n                                        <button style={{border: 'none'}} onClick={() => {navigator.clipboard.writeText(forms.accessToken)}}><Icon name='copy' color='blue'/></button>\n                                        <button style={{border: 'none'}} onClick={() => updateToken(forms.id)}><Icon name='refresh' color='blue'/></button>\n                                    </span>\n                                        \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n                </div>\n                <img src={IconForms} alt=\"icon\" className=\"icon-forms\" />\n                </div>\n                <div className=\"centered\">\n                    <Button\n                        icon=\"add\"\n                        content=\"Criar novo formulário\"\n                        basic\n                        color=\"blue\"\n                        onClick={() => onEditForms()}\n                    />\n                </div>\n        </div>\n    );\n};\n\nexport default FormsList;\n"]},"metadata":{},"sourceType":"module"}