{"ast":null,"code":"import axios from \"axios\";\nimport { servAddr } from \"../utils/constants\";\nexport const putMetric = (id, value) => {\n  return axios.put(`${servAddr}/metrics`, {\n    id,\n    data: isNaN(value) ? value : parseInt(value, 10)\n  });\n};\nexport const postForms = (title, metrics) => {\n  return axios.post(`${servAddr}/forms`, {\n    title,\n    metrics\n  });\n};\nexport const putForms = (id, title, metrics) => {\n  return axios.put(`${servAddr}/forms`, {\n    id,\n    title,\n    metrics\n  });\n};\nexport const getForms = () => {\n  return axios.get(`${servAddr}/forms`);\n};\nexport const postEvidence = (metricId, file) => {\n  let formData = new FormData();\n  formData.append(\"data\", file, file.name);\n  return axios.post(`${servAddr}/metrics/${metricId.replace('/', '-')}/evidence`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const getMetricbyId = metricId => {\n  return axios.get(`${servAddr}/metrics/${metricId.replace('/', '-')}`);\n};\nexport const deleteEvidence = (metricId, evidenceId) => {\n  return axios.delete(`${servAddr}/metrics/${metricId.replace('/', '-')}/evidence/${evidenceId}`);\n};","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/utils/data.js"],"names":["axios","servAddr","putMetric","id","value","put","data","isNaN","parseInt","postForms","title","metrics","post","putForms","getForms","get","postEvidence","metricId","file","formData","FormData","append","name","replace","headers","getMetricbyId","deleteEvidence","evidenceId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACtC,SAAOJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,QAAS,UAAtB,EAAiC;AACtCE,IAAAA,EADsC;AAEtCG,IAAAA,IAAI,EAAEC,KAAK,CAACH,KAAD,CAAL,GAAeA,KAAf,GAAuBI,QAAQ,CAACJ,KAAD,EAAQ,EAAR;AAFC,GAAjC,CAAP;AAID,CALM;AAOP,OAAO,MAAMK,SAAS,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3C,SAAOX,KAAK,CAACY,IAAN,CAAY,GAAEX,QAAS,QAAvB,EAAgC;AACrCS,IAAAA,KADqC;AAErCC,IAAAA;AAFqC,GAAhC,CAAP;AAID,CALM;AAOP,OAAO,MAAME,QAAQ,GAAG,CAACV,EAAD,EAAKO,KAAL,EAAYC,OAAZ,KAAwB;AAC9C,SAAOX,KAAK,CAACK,GAAN,CAAW,GAAEJ,QAAS,QAAtB,EAA+B;AACpCE,IAAAA,EADoC;AAEpCO,IAAAA,KAFoC;AAGpCC,IAAAA;AAHoC,GAA/B,CAAP;AAKD,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC5B,SAAOd,KAAK,CAACe,GAAN,CAAW,GAAEd,QAAS,QAAtB,CAAP;AACD,CAFM;AAKP,OAAO,MAAMe,YAAY,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAE9C,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB,EAA8BA,IAAI,CAACI,IAAnC;AAEA,SAAOtB,KAAK,CAACY,IAAN,CAAY,GAAEX,QAAS,YAAWgB,QAAQ,CAACM,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAA2B,WAA7D,EAAyEJ,QAAzE,EAAmF;AACxFK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAD+E,GAAnF,CAAP;AAKD,CAXM;AAaP,OAAO,MAAMC,aAAa,GAAIR,QAAD,IAAc;AACzC,SAAOjB,KAAK,CAACe,GAAN,CAAW,GAAEd,QAAS,YAAWgB,QAAQ,CAACM,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAA2B,EAA5D,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,cAAc,GAAG,CAACT,QAAD,EAAWU,UAAX,KAA0B;AACtD,SAAO3B,KAAK,CAAC4B,MAAN,CAAc,GAAE3B,QAAS,YAAWgB,QAAQ,CAACM,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAA2B,aAAYI,UAAW,EAAtF,CAAP;AACD,CAFM","sourcesContent":["import axios from \"axios\";\nimport { servAddr } from \"../utils/constants\";\n\nexport const putMetric = (id, value) => {\n  return axios.put(`${servAddr}/metrics`, {\n    id,\n    data: isNaN(value) ? value : parseInt(value, 10),\n  });\n};\n\nexport const postForms = (title, metrics) => {\n  return axios.post(`${servAddr}/forms`, {\n    title,\n    metrics,\n  });\n};\n\nexport const putForms = (id, title, metrics) => {\n  return axios.put(`${servAddr}/forms`, {\n    id,\n    title,\n    metrics,\n  });\n};\n\nexport const getForms = () => {\n  return axios.get(`${servAddr}/forms`);\n};\n\n\nexport const postEvidence = (metricId, file) => {\n\n  let formData = new FormData();\n\n  formData.append(\"data\", file, file.name);\n\n  return axios.post(`${servAddr}/metrics/${metricId.replace('/', '-')}/evidence`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\nexport const getMetricbyId = (metricId) => {\n  return axios.get(`${servAddr}/metrics/${metricId.replace('/', '-')}`)\n}\n\nexport const deleteEvidence = (metricId, evidenceId) => {\n  return axios.delete(`${servAddr}/metrics/${metricId.replace('/', '-')}/evidence/${evidenceId}`)\n}\n"]},"metadata":{},"sourceType":"module"}