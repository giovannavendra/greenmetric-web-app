{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/FormsEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport { EditFormsContext } from \"../context/EditFormsContext\";\nimport Question from \"./Question\";\nimport { Form } from \"semantic-ui-react\";\nimport { genFormsList } from \"../utils/utils\";\n\nconst FormsEditor = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const {\n    state: stateEF,\n    dispatch: dispatchEF\n  } = useContext(EditFormsContext);\n  const [idList, setIdList] = useState([]);\n  useEffect(() => {\n    setIdList(genFormsList([...state.metrics], [...stateEF.selectedDir]));\n  }, [state, stateEF]);\n  console.log(idList);\n  const questionList = idList.map(el => {\n    if (el) {\n      const metric = state.metrics.find(metric => metric.id === el);\n      if (metric) return /*#__PURE__*/_jsxDEV(Question, {\n        q: metric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }, this);\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: questionList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(FormsEditor, \"SPh9ZETC+CDjbpmP6YvFHVANrmo=\");\n\n_c = FormsEditor;\nexport default FormsEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEditor\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/components/FormsEditor.jsx"],"names":["React","useContext","useState","useEffect","AppContext","EditFormsContext","Question","Form","genFormsList","FormsEditor","state","dispatch","stateEF","dispatchEF","idList","setIdList","metrics","selectedDir","console","log","questionList","map","el","metric","find","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBV,UAAU,CAACG,UAAD,CAAtC;AACA,QAAM;AAAEM,IAAAA,KAAK,EAAEE,OAAT;AAAkBD,IAAAA,QAAQ,EAAEE;AAA5B,MAA2CZ,UAAU,CAACI,gBAAD,CAA3D;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS,CAACP,YAAY,CAAC,CAAC,GAAGE,KAAK,CAACM,OAAV,CAAD,EAAqB,CAAC,GAAGJ,OAAO,CAACK,WAAZ,CAArB,CAAb,CAAT;AACD,GAFQ,EAEN,CAACP,KAAD,EAAQE,OAAR,CAFM,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,QAAMM,YAAY,GAAGN,MAAM,CAACO,GAAP,CAAYC,EAAD,IAAQ;AACtC,QAAIA,EAAJ,EAAQ;AACN,YAAMC,MAAM,GAAGb,KAAK,CAACM,OAAN,CAAcQ,IAAd,CAAoBD,MAAD,IAAYA,MAAM,CAACE,EAAP,KAAcH,EAA7C,CAAf;AACA,UAAIC,MAAJ,EAAY,oBAAO,QAAC,QAAD;AAAU,QAAA,CAAC,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACb;;AACD,WAAO,IAAP;AACD,GANoB,CAArB;AAQA,sBAAO,QAAC,IAAD;AAAA,cAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;GAAMX,W;;KAAAA,W;AAsBN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport { EditFormsContext } from \"../context/EditFormsContext\";\nimport Question from \"./Question\";\nimport { Form } from \"semantic-ui-react\";\nimport { genFormsList } from \"../utils/utils\";\n\nconst FormsEditor = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const { state: stateEF, dispatch: dispatchEF } = useContext(EditFormsContext);\n\n  const [idList, setIdList] = useState([]);\n\n  useEffect(() => {\n    setIdList(genFormsList([...state.metrics], [...stateEF.selectedDir]));\n  }, [state, stateEF]);\n\n  console.log(idList);\n  const questionList = idList.map((el) => {\n    if (el) {\n      const metric = state.metrics.find((metric) => metric.id === el);\n      if (metric) return <Question q={metric} />;\n    }\n    return null;\n  });\n\n  return <Form>{questionList}</Form>;\n};\n\nexport default FormsEditor;\n"]},"metadata":{},"sourceType":"module"}