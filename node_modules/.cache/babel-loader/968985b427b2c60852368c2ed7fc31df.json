{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giovanna/Documents/MC855/green-metric/web-app/src/pages/PageEditMetric.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ContextMenu from '../components/ContextMenu';\nimport MetricsEditor from '../components/MetricsEditor';\nimport NavigationSidebar from '../components/NavigationSidebar';\n\nconst PageEditMetric = ({}) => {\n  _s();\n\n  const [id, setId] = useState(null);\n\n  const editMetric = (e, id, showMenu) => {\n    e.stopPropagation();\n    setId(id);\n    showMenu(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ContextMenu, {\n        triggersList: [\".metric\", \".directory\"],\n        children: ({\n          target,\n          setShowMenu\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [(target === null || target === void 0 ? void 0 : target.classList.contains(\"directory\")) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"clickable\",\n              onClick: e => editMetric(e, target === null || target === void 0 ? void 0 : target.id, setShowMenu),\n              children: [\"Adicionar m\\xE9trica ao diret\\xF3rio \", target === null || target === void 0 ? void 0 : target.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this), (target === null || target === void 0 ? void 0 : target.classList.contains(\"metric\")) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"clickable\",\n            onClick: e => editMetric(e, target === null || target === void 0 ? void 0 : target.id, setShowMenu),\n            children: [\"Editar m\\xE9trica \", target === null || target === void 0 ? void 0 : target.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavigationSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MetricsEditor, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageEditMetric, \"/Li6T+2aYOMtLZoi3YjK/QlIYa4=\");\n\n_c = PageEditMetric;\nexport default PageEditMetric;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageEditMetric\");","map":{"version":3,"sources":["/Users/giovanna/Documents/MC855/green-metric/web-app/src/pages/PageEditMetric.jsx"],"names":["React","useEffect","useState","ContextMenu","MetricsEditor","NavigationSidebar","PageEditMetric","id","setId","editMetric","e","showMenu","stopPropagation","target","setShowMenu","classList","contains"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAEA,MAAMC,cAAc,GAAG,CAAC,EAAD,KAAS;AAAA;;AAC5B,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,IAAD,CAA5B;;AAEA,QAAMO,UAAU,GAAG,CAACC,CAAD,EAAIH,EAAJ,EAAQI,QAAR,KAAqB;AACpCD,IAAAA,CAAC,CAACE,eAAF;AACAJ,IAAAA,KAAK,CAACD,EAAD,CAAL;AACAI,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,YAAY,EAAE,CAAC,SAAD,EAAY,YAAZ,CAA3B;AAAA,kBACK,CAAC;AAAEE,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAD,kBACG;AAAA,qBACK,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,SAAR,CAAkBC,QAAlB,CAA2B,WAA3B,mBACG;AAAA,mCACI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAyB,cAAA,OAAO,EAAGN,CAAD,IAAOD,UAAU,CAACC,CAAD,EAAIG,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEN,EAAZ,EAAgBO,WAAhB,CAAnD;AAAA,kEACoCD,MADpC,aACoCA,MADpC,uBACoCA,MAAM,CAAEN,EAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFR,EAQK,CAAAM,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,SAAR,CAAkBC,QAAlB,CAA2B,QAA3B,mBACG;AAAG,YAAA,SAAS,EAAC,WAAb;AAAyB,YAAA,OAAO,EAAGN,CAAD,IAAOD,UAAU,CAACC,CAAD,EAAIG,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEN,EAAZ,EAAgBO,WAAhB,CAAnD;AAAA,6CACoBD,MADpB,aACoBA,MADpB,uBACoBA,MAAM,CAAEN,EAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI,QAAC,aAAD;AAAe,MAAA,EAAE,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAuBI;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CApCD;;GAAMD,c;;KAAAA,c;AAsCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ContextMenu from '../components/ContextMenu'\nimport MetricsEditor from '../components/MetricsEditor'\nimport NavigationSidebar from '../components/NavigationSidebar'\n\nconst PageEditMetric = ({ }) => {\n    const [id, setId] = useState(null)\n\n    const editMetric = (e, id, showMenu) => {\n        e.stopPropagation();\n        setId(id)\n        showMenu(false)\n    }\n\n    return (\n        <div className='sidebar-page'>\n            <div>\n                <ContextMenu triggersList={[\".metric\", \".directory\"]}>\n                    {({ target, setShowMenu }) =>\n                        <div>\n                            {target?.classList.contains(\"directory\") && (\n                                <div>\n                                    <p className=\"clickable\" onClick={(e) => editMetric(e, target?.id, setShowMenu)}>\n                                        Adicionar métrica ao diretório {target?.id}\n                                    </p>\n                                </div>\n                            )}\n                            {target?.classList.contains(\"metric\") && (\n                                <p className=\"clickable\" onClick={(e) => editMetric(e, target?.id, setShowMenu)}>\n                                    Editar métrica {target?.id}\n                                </p>\n                            )}\n                        </div>\n                    }\n                </ContextMenu>\n                <NavigationSidebar />\n            </div>\n            <MetricsEditor id={id} />\n            <div></div>\n        </div>\n    )\n}\n\nexport default PageEditMetric"]},"metadata":{},"sourceType":"module"}